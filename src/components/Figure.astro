---
import { Picture } from 'astro:assets';

export interface Props {
	src?: string;
	alt?: string;
	aspectRatio?: `${number}:${number}`;
	widths?: string;
	sizes?: string;
	type?: 'picture' | 'video' | 'useCase';
	fullWidth?: boolean;
	loading?: 'eager' | 'lazy';
	captionHidden?: boolean;
	width?: number;
	height?: number;
	shadow?: boolean;
}

const {
	src = 'https://slipsum.com/wp-content/themes/15zine/img/sam.png',
	alt = '',
	aspectRatio = '16:10',
	type = 'picture',
	fullWidth = false,
	loading = 'lazy',
	captionHidden = false,
	width,
	height,
	shadow = true,
} = Astro.props;

let _src = '';

if (type === 'video') {
	_src = import.meta.env.PUBLIC_APACHE_URL + src;
}
---

<script>
	const videos = document.querySelectorAll('video.video');

	let options = {
		rootMargin: '0px',
		threshold: 0.5,
	};

	let callback = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {
		entries.forEach((entry) => {
			if (!entry.isIntersecting && entry.target instanceof HTMLVideoElement) {
				entry.target.pause();
			} else if (entry.isIntersecting && entry.target instanceof HTMLVideoElement) {
				entry.target.play();
			}
		});
	};
	let observer = new IntersectionObserver(callback, options);

	videos.forEach((elem) => observer.observe(elem));
</script>

<figure class="media--container media--grid-container full-width-reset">
	<span class:list={['media--elem-wrapper', (fullWidth && 'grid--full') || 'media--1-9col']}>
		{
			type === 'picture' && (
				<>
					<a href={src}>
						<slot>
							<Picture
								src={src}
								width={width}
								height={height}
								alt={alt}
								decoding="async"
								loading={loading}
							/>
						</slot>
					</a>
				</>
			)
		}

		{
			type === 'video' && (
				<>
					<video
						title={alt}
						class="video"
						width="100%"
						height="100%"
						src={_src}
						muted
						controls
						autoplay
						loop
					/>
				</>
			)
		}
	</span>
	{alt && !captionHidden && <figcaption class="figcaption--style">{alt}</figcaption>}
</figure>

<style lang="scss">
	// Media styles in src/styles/styles.scss
</style>
