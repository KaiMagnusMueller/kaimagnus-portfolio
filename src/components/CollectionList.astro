---
import type { CollectionEntry } from 'astro:content';

export interface Props {
	title?: string;
	entries: CollectionEntry<'projects' | 'articles' | 'work'>[];
	ariaDetails?: string;
}
const { title, entries, ariaDetails } = Astro.props;

const _entries = entries.sort((a, b) => b.data.pubDatetime.getTime() - a.data.pubDatetime.getTime());

function allSameValue(keyName, arr) {
	const values = arr.map((obj) => obj[keyName]);
	return new Set(values).size === 1;
}
---

{
	// check if entries is empty, only display list if there are entries
	_entries && _entries.length > 0 && (
		<div class="post-list text-regular">
			{title && allSameValue('collection', _entries) ? (
				<h2 class="color-text-low-contrast">
					<a href={`/${_entries[0].collection}`}>{title}</a>
				</h2>
			) : (
				<h2 class="color-text-low-contrast">{title}</h2>
			)}

			<slot />
			<ul>
				{_entries.map((entry) => (
					<li>
						<a
							class={
								entry.data.highlight
									? 'highlight text-regular position--relative'
									: 'text-regular position--relative'
							}
							href={`/${entry.collection}/${entry.slug}`}
							aria-label={entry.data.description}>
							{entry.data.title}
						</a>
					</li>
				))}
			</ul>
		</div>
	)
}

<style lang="scss">
	@import '../styles/_vars.scss';

	.post-list {
		margin-block-start: 4rem;
		margin-block-end: 4rem;
		// line-height: 22px;
		// line-height: 1.6; //If font is SF Pro
	}

	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	h2 {
		margin: 3px 0;
	}

	li,
	h2 {
		margin: 0.3rem 0;
	}

	span:hover {
	}

	a {
		text-decoration: none;
		display: inline-block;

		&:hover {
			text-decoration: revert;
		}
	}

	@media (pointer: coarse) {
		li,
		h2 {
			line-height: 1.6;
		}

		a {
			line-height: 1.6;
		}
	}

	@media (max-width: $screen-md) {
		.post-list {
			margin-bottom: 3rem;
		}
	}
</style>
